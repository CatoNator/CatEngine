sprites:
sprite data held in an ini/xml file (whatever C# supports natively)

[0] #index of sprite
#the sprite name
name = "player_idle"
#the texture sheet on which this sprite resides on
texture = "tx_player"
#the coordinates of the sprite on the texture sheet
left = 0;
top = 0;
#the sprite data
width = 0;
height = 0;
images = 0;
xorigin = 0;
yorigin = 0;

Dictionary<string spriteName, int spriteIndex>

music/sounds
file data held in an ini

[0] #index of audio file
#internal name for the audio
name = "mus_menu"
#the filename
file = "menu.ogg"

Dictionary<string soundName, int index>

rendering an irregular polygon with textures as floor

render the texture on a rendertarget
render the polygon itself as a mask
cut out the area on the rendertarget outside of the polygon
- maybe I should restrict the polygon to being a quad?


-- SAT collision to replace the AABB solutions I have atm
walls to be vector-based instead of tile-based
maybe utilize the collision code from asteroids circle collider?
	figure out the closes corner along the axis between the centers of two colliders

XML-based level files

<root>
	<wall>
		<x1>0</x1>
		<y1>0</y1>
		<x2>0</x2>
		<y2>0</y2>
	</wall>
</root>

update()

if (currentgamestate = gamestate.startmenu)